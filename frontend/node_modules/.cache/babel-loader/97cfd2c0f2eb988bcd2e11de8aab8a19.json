{"ast":null,"code":"import _defineProperty from \"/workspace/django-drf-react-todo/app/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/workspace/django-drf-react-todo/app/frontend/src/components/Modal.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from \"react\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Form, FormGroup, Input, Label } from \"reactstrap\";\nexport default class CustomModal extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      let _e$target = e.target,\n          name = _e$target.name,\n          value = _e$target.value;\n\n      if (e.target.type === \"checkbox\") {\n        value = e.target.checked;\n      }\n\n      const activeItem = _objectSpread({}, this.state.activeItem, {\n        [name]: value\n      });\n\n      this.setState({\n        activeItem\n      });\n    };\n\n    this.state = {\n      activeItem: this.props.activeItem\n    };\n  }\n\n  render() {\n    const _this$props = this.props,\n          toggle = _this$props.toggle,\n          onSave = _this$props.onSave;\n    return React.createElement(Modal, {\n      isOpen: true,\n      toggle: toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(ModalHeader, {\n      toggle: toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \" Todo Item \"), React.createElement(ModalBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"Title\"), React.createElement(Input, {\n      type: \"text\",\n      name: \"title\",\n      value: this.state.activeItem.title,\n      onChange: this.handleChange,\n      placeholder: \"Enter Todo Title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Description\"), React.createElement(Input, {\n      type: \"text\",\n      name: \"description\",\n      value: this.state.activeItem.description,\n      onChange: this.handleChange,\n      placeholder: \"Enter Todo description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      check: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"completed\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(Input, {\n      type: \"checkbox\",\n      name: \"completed\",\n      checked: this.state.activeItem.completed,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), \"Completed\")))), React.createElement(ModalFooter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"success\",\n      onClick: () => onSave(this.state.activeItem),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Save\")));\n  }\n\n}","map":{"version":3,"sources":["/workspace/django-drf-react-todo/app/frontend/src/components/Modal.js"],"names":["React","Component","Button","Modal","ModalHeader","ModalBody","ModalFooter","Form","FormGroup","Input","Label","CustomModal","constructor","props","handleChange","e","target","name","value","type","checked","activeItem","state","setState","render","toggle","onSave","title","description","completed"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n    Button,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    ModalFooter,\n    Form,\n    FormGroup,\n    Input,\n    Label\n} from \"reactstrap\";\n\nexport default class CustomModal extends Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        activeItem: this.props.activeItem\n    };\n}\n    handleChange = e => {\n      let { name, value } = e.target;\n        if (e.target.type === \"checkbox\") {\n          value = e.target.checked;\n    }\n      const activeItem = { ...this.state.activeItem, [name]: value };\n      this.setState({ activeItem });\n    };\n    render() {\n      const { toggle, onSave } = this.props;\n      return (\n        <Modal isOpen={true} toggle={toggle}>\n        <ModalHeader toggle={toggle}> Todo Item </ModalHeader>\n        <ModalBody>\n            <Form>\n            <FormGroup>\n                <Label for=\"title\">Title</Label>\n                <Input\n                    type=\"text\"\n                    name=\"title\"\n                    value={this.state.activeItem.title}\n                    onChange={this.handleChange}\n                    placeholder=\"Enter Todo Title\"\n                />\n            </FormGroup>\n            <FormGroup>\n                <Label for=\"description\">Description</Label>\n                <Input\n                    type=\"text\"\n                    name=\"description\"\n                    value={this.state.activeItem.description}\n                    onChange={this.handleChange}\n                    placeholder=\"Enter Todo description\"\n                />\n            </FormGroup>\n            <FormGroup check>\n                <Label for=\"completed\">\n                <Input\n                      type=\"checkbox\"\n                      name=\"completed\"\n                      checked={this.state.activeItem.completed}\n                      onChange={this.handleChange}\n                />\n                Completed\n                </Label>\n            </FormGroup>\n            </Form>\n        </ModalBody>\n        <ModalFooter>\n            <Button color=\"success\" onClick={() => onSave(this.state.activeItem)}>\n               Save\n            </Button>\n            </ModalFooter>\n        </Modal>\n      );\n    }\n}"]},"metadata":{},"sourceType":"module"}