{"ast":null,"code":"var _jsxFileName = \"/workspace/django-drf-react-todo/app/frontend/src/App.js\";\nimport React, { Component } from \"react\";\nconst todoItems = [{\n  id: 1,\n  title: \"Go to Market\",\n  description: \"Buy ingredients to prepare dinner\",\n  completed: true\n}, {\n  id: 2,\n  title: \"Study\",\n  description: \"Read Algebra and History textbook for upcoming test\",\n  completed: false\n}, {\n  id: 3,\n  title: \"Sally's books\",\n  description: \"Go to library to rent sally's books\",\n  completed: true\n}, {\n  id: 4,\n  title: \"Article\",\n  description: \"Write article on how to use django with react\",\n  completed: false\n}];\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.displayCompleted = status => {\n      if (status) {\n        return this.setState({\n          viewCompleted: true\n        });\n      }\n\n      return this.setState({\n        viewCompleted: false\n      });\n    };\n\n    this.renderTabList = () => {\n      return React.createElement(\"div\", {\n        className: \"my-5 tab-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        onClick: () => this.displayCompleted(true),\n        className: this.state.viewCompleted ? \"active\" : \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"complete\"), React.createElement(\"span\", {\n        onClick: () => this.displayCompleted(false),\n        className: this.state.viewCompleted ? \"\" : \"active\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"Incomplete\"));\n    };\n\n    this.renderItems = () => {\n      const viewCompleted = this.state.viewCompleted;\n      const newItems = this.state.todoList.filter(item => item.completed == viewCompleted);\n      return newItems.map(item => React.createElement(\"li\", {\n        key: item.id,\n        className: \"list-group-item d-flex justify-content-between align-items-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"todo-title mr-2 \".concat(this.state.viewCompleted ? \"completed-todo\" : \"\"),\n        title: item.description,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, item.title), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-secondary mr-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \" Edit \"), React.createElement(\"button\", {\n        className: \"btn btn-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"Delete \"))));\n    };\n\n    this.state = {\n      viewCompleted: false,\n      todoList: todoItems\n    };\n  }\n\n  render() {\n    return React.createElement(\"main\", {\n      className: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"text-white text-uppercase text-center my-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Todo app\"), React.createElement(\"div\", {\n      className: \"row \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-6 col-sm-10 mx-auto p-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card p-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Add task\")), this.renderTabList(), React.createElement(\"ul\", {\n      className: \"list-group list-group-flush\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, this.renderItems())))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/workspace/django-drf-react-todo/app/frontend/src/App.js"],"names":["React","Component","todoItems","id","title","description","completed","App","constructor","props","displayCompleted","status","setState","viewCompleted","renderTabList","state","renderItems","newItems","todoList","filter","item","map","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nconst todoItems = [\n      {\n    id: 1,\n    title: \"Go to Market\",\n    description: \"Buy ingredients to prepare dinner\",\n    completed: true\n    },\n    {\n    id: 2,\n    title: \"Study\",\n    description: \"Read Algebra and History textbook for upcoming test\",\n    completed: false\n    },\n    {\n    id: 3,\n    title: \"Sally's books\",\n    description: \"Go to library to rent sally's books\",\n    completed: true\n    },\n    {\n    id: 4,\n    title: \"Article\",\n    description: \"Write article on how to use django with react\",\n    completed: false\n    }\n];\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            viewCompleted: false,\n            todoList: todoItems\n        };\n    }\ndisplayCompleted = status => {\n    if (status) {\n        return this.setState({ viewCompleted: true });\n        }\n        return this.setState({ viewCompleted: false });\n      };\nrenderTabList = () => {\n    return (\n        <div className=\"my-5 tab-list\">\n        <span\n            onClick={() => this.displayCompleted(true)}\n            className={this.state.viewCompleted ? \"active\" : \"\"}\n        >\n            complete\n        </span>\n        <span\n            onClick={() => this.displayCompleted(false)}\n            className={this.state.viewCompleted ? \"\" : \"active\"}\n        >\n            Incomplete\n        </span>\n        </div>\n    );\n};\nrenderItems = () => {\n    const { viewCompleted } = this.state;\n    const newItems = this.state.todoList.filter(\n        item => item.completed == viewCompleted\n    );\n    return newItems.map(item => (\n        <li\n            key={item.id}\n            className=\"list-group-item d-flex justify-content-between align-items-center\"\n        >\n        <span\n            className={`todo-title mr-2 ${\n                this.state.viewCompleted ? \"completed-todo\" : \"\"\n            }`}\n            title={item.description}\n        >\n              {item.title}\n        </span>\n        <span>\n            <button className=\"btn btn-secondary mr-2\"> Edit </button>\n            <button className=\"btn btn-danger\">Delete </button>\n        </span>\n        </li>\n    ));\n};\nrender() {\n    return (\n        <main className=\"content\">\n            <h1 className=\"text-white text-uppercase text-center my-4\">Todo app</h1>\n            <div className=\"row \">\n              <div className=\"col-md-6 col-sm-10 mx-auto p-0\">\n                <div className=\"card p-3\">\n                  <div className=\"\">\n                    <button className=\"btn btn-primary\">Add task</button>\n                  </div>\n                  {this.renderTabList()}\n                  <ul className=\"list-group list-group-flush\">\n                    {this.renderItems()}\n                  </ul>\n                </div>\n              </div>\n            </div>\n        </main>\n    );\n    }\n}\nexport default App;"]},"metadata":{},"sourceType":"module"}